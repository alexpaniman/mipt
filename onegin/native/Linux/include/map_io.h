#ifndef ONEGIN_FILES_MAPIO_H_
#define ONEGIN_FILES_MAPIO_H_

/**************************************************************************//**
 * @file     map_io.h
 * @brief    Onegin App. Mapping files.
 * @version  V0.0.1
 * @date     12. Sep 2024
 * @author   Matvey Rybalkin
 ******************************************************************************/

/*

Основные компоненты:

    llibs_GetFileHandle — открытие файла.
        Используется функция CreateFileA для открытия файла с возможностью чтения (GENERIC_READ). Файл должен уже существовать, а другие процессы могут также его читать (FILE_SHARE_READ).
        Возвращает дескриптор файла (или ошибку, если открыть не удалось).

    llibs_GetMapHandle — создание объекта маппинга файла.
        CreateFileMappingA создает объект, который позволяет отображать файл в память. Мы запрашиваем доступ только для чтения (PAGE_READONLY), и размер маппинга определяется автоматически.

    llibs_GetMapView — отображение файла в память.
        Функция MapViewOfFile используется для отображения содержимого файла в виртуальную память. После этого мы можем обращаться к файлу через указатель на память. В данном случае, доступ только для чтения (FILE_MAP_READ).

    llibs_GetFileSize — получение размера файла.
        Используется GetFileSizeEx для получения точного размера файла в байтах. Возвращает размер файла или ошибку (-1).

Функции работы с файлом:

    lfopen — открытие файла и маппинг его в память.
        Шаги:
            Открываем файл через llibs_GetFileHandle.
            Создаем объект маппинга через llibs_GetMapHandle.
            Отображаем файл в память с помощью llibs_GetMapView.
            Получаем размер файла через llibs_GetFileSize.
            Если любой из этих шагов не удается, освобождаем ресурсы и возвращаем ошибку.

    lfget — возвращает указатель на отображённый файл в памяти.
        *pointer получает указатель на данные файла, которые уже находятся в памяти.

    lfclose — закрытие файла.
        Освобождает отображение файла из памяти (UnmapViewOfFile) и закрывает дескрипторы объектов маппинга и файла.

*/

#include <windows.h>
#include <stdlib.h>

typedef enum {
    MAP_FILE_READ,
    MAP_FILE_WRITE,
} map_file_dir_t;

typedef struct {
    map_file_dir_t dir;
} map_file_conf_t;

typedef struct {
    HANDLE handle;  
    size_t size;
} map_file_t;

#endif // ONEGIN_FILES_MAPIO_H_